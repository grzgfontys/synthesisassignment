<Project>
  <Name>Synthesis Assignment</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>UML</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Client</Name>
        <Access>Public</Access>
        <Location left="806" top="695" />
        <Size width="178" height="245" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string username</Member>
        <Member type="Field">private BonusCard? bonusCard</Member>
        <Member type="Field">private Address? address</Member>
        <Member type="Constructor">public Client()</Member>
        <Member type="Constructor">public Client(ClientDTO clientDTO)</Member>
        <Member type="Property">public string Username { get; private set; }</Member>
        <Member type="Property">public BonusCard? BonusCard { get; set; }</Member>
        <Member type="Property">public List&lt;Address&gt; Adresses { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Order</Name>
        <Access>Public</Access>
        <Location left="1220" top="809" />
        <Size width="303" height="536" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private Client client</Member>
        <Member type="Field">private int? orderBonusPoints</Member>
        <Member type="Field">private int? orderSpentBonusPoints</Member>
        <Member type="Field">private DateOnly orderDate</Member>
        <Member type="Field">private DateOnly? deliveryDate</Member>
        <Member type="Field">private OrderStatus orderStatus</Member>
        <Member type="Field">private PaymentMethod paymentMethod</Member>
        <Member type="Field">private Address address</Member>
        <Member type="Field">private List&lt;LineItem&gt; purchasedItems</Member>
        <Member type="Constructor">public Order()</Member>
        <Member type="Constructor">public Order(OrderDTO orderDTO)</Member>
        <Member type="Constructor">public Order(Client client, int? orderBonusPoints, int? orderSpentBonusPoints, DateOnly orderDate, DateOnly? deliveryDate, OrderStatus orderStatus, PaymentMethod paymentMethod, Address address, List&lt;LineItem&gt; purchasedItems)</Member>
        <Member type="Method">public decimal TotalPrice()</Member>
        <Member type="Method">public decimal DiscountProfit()</Member>
        <Member type="Method">public decimal PriceWithoutDiscount()</Member>
        <Member type="Method">public int? TotalBonusPointsAfterOrder()</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public Client Client { get; set; }</Member>
        <Member type="Property">public int? OrderBonusPoints { get; set; }</Member>
        <Member type="Property">public int? OrderSpentBonusPoints { get; set; }</Member>
        <Member type="Property">public DateOnly OrderDate { get; set; }</Member>
        <Member type="Property">public DateOnly? DeliveryDate { get; set; }</Member>
        <Member type="Property">public OrderStatus OrderStatus { get; set; }</Member>
        <Member type="Property">public PaymentMethod PaymentMethod { get; set; }</Member>
        <Member type="Property">public Address Address { get; set; }</Member>
        <Member type="Property">public List&lt;LineItem&gt; PurchasedItems { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Item</Name>
        <Access>Public</Access>
        <Location left="3049" top="689" />
        <Size width="181" height="434" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string name</Member>
        <Member type="Field">private ItemCategory category</Member>
        <Member type="Field">private ItemCategory subCategory</Member>
        <Member type="Field">private decimal price</Member>
        <Member type="Field">private string unitType</Member>
        <Member type="Field">private bool available</Member>
        <Member type="Field">private int stockAmount</Member>
        <Member type="Field">private List&lt;IDiscount&gt; discounts</Member>
        <Member type="Constructor">public Item()</Member>
        <Member type="Constructor">public Item(ItemDTO itemDTO)</Member>
        <Member type="Constructor">public Item(int id, string name, ItemCategory category, ItemCategory subCategory, decimal price, string unitType, bool available, int stockAmount)</Member>
        <Member type="Property">public int Id { get; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public ItemCategory Category { get; set; }</Member>
        <Member type="Property">public ItemCategory SubCategory { get; set; }</Member>
        <Member type="Property">public decimal Price { get; set; }</Member>
        <Member type="Property">public bool Available { get; set; }</Member>
        <Member type="Property">public string UnitType { get; set; }</Member>
        <Member type="Property">public IDiscount Discounts { get; set; }</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>OrderStatus</Name>
        <Access>Public</Access>
        <Location left="2731" top="385" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>OrderPlaced</Value>
        <Value>Packed</Value>
        <Value>Shipped</Value>
        <Value>Delivered</Value>
      </Entity>
      <Entity type="Class">
        <Name>BonusCard</Name>
        <Access>Public</Access>
        <Location left="584" top="695" />
        <Size width="162" height="245" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private int amountOfPoints</Member>
        <Member type="Constructor">public BonusCard(int id, int amountOfPoints)</Member>
        <Member type="Property">public int Id { set; }</Member>
        <Member type="Property">public int AmountOfPoints { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Employee</Name>
        <Access>Public</Access>
        <Location left="340" top="695" />
        <Size width="162" height="245" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string employeeRole</Member>
        <Member type="Constructor">public Employee(EmployeeDTO employeeDTO)</Member>
        <Member type="Property">public string EmployeeRole { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShoppingCart</Name>
        <Access>Public</Access>
        <Location left="1282" top="323" />
        <Size width="176" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private List&lt;LineItem&gt; addedItems</Member>
        <Member type="Field">private LineItem lastAddedLineItem</Member>
        <Member type="Field">private LineItem lastUpdatedLineItem</Member>
        <Member type="Constructor">public ShoppingCart()</Member>
        <Member type="Constructor">public ShoppingCart(List&lt;LineItem&gt; addedItems)</Member>
        <Member type="Constructor">public ShoppingCart(ShoppingCartDTO shoppingCartDTO)</Member>
        <Member type="Method">public bool IsEmpty()</Member>
        <Member type="Method">public bool IsAddedLineItemNew(LineItem newLineItem)</Member>
        <Member type="Method">public void SortAddedItems()</Member>
        <Member type="Method">public bool AreItemsAvailable()</Member>
        <Member type="Method">public decimal TotalPrice()</Member>
        <Member type="Method">public decimal DiscountProfit()</Member>
        <Member type="Method">public decimal PriceWithoutDiscount()</Member>
        <Member type="Property">public List&lt;LineItem&gt; AddedItems { get; set; }</Member>
        <Member type="Property">public LineItem LastAddedLineItem { get; set; }</Member>
        <Member type="Property">public LineItem LastUpdatedLineItem { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OrderRepository</Name>
        <Access>Public</Access>
        <Location left="1299" top="2186" />
        <Size width="163" height="94" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private IEnumerable&lt;OrderDTO&gt; GetOrders(string Query, List&lt;SqlParameter&gt;? sqlParameters)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ClientRepository</Name>
        <Access>Public</Access>
        <Location left="807" top="2186" />
        <Size width="163" height="94" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EmployeeRepository</Name>
        <Access>Public</Access>
        <Location left="324" top="2186" />
        <Size width="163" height="94" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>MainRepository</Name>
        <Access>Public</Access>
        <Location left="1299" top="2440" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected SqlConnection conn</Member>
        <Member type="Field">protected string constr</Member>
        <Member type="Constructor">public MainRepository()</Member>
        <Member type="Method">protected SqlConnection GetConnection()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ClientManager</Name>
        <Access>Public</Access>
        <Location left="754" top="1650" />
        <Size width="273" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IClientRepository clientRepository</Member>
        <Member type="Constructor">public ClientManager(IClientRepository clientRepository)</Member>
        <Member type="Method">public static ClientDTO ConvertToClientDTO(Client client)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EmployeeManager</Name>
        <Access>Public</Access>
        <Location left="262" top="1650" />
        <Size width="333" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IEmployeeRepository employeeRepository</Member>
        <Member type="Constructor">public EmployeeManager(IEmployeeRepository employeeRepository)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OrderManager</Name>
        <Access>Public</Access>
        <Location left="1243" top="1669" />
        <Size width="274" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IOrderRepository orderRepository</Member>
        <Member type="Constructor">public OrderManager(IOrderRepository orderRepository)</Member>
        <Member type="Method">public static OrderDTO ConvertToOrderDTO(Order order)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ItemManager</Name>
        <Access>Public</Access>
        <Location left="2984" top="1647" />
        <Size width="260" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IItemRepository itemRepository</Member>
        <Member type="Constructor">public ItemManager(IItemRepository itemRepository)</Member>
        <Member type="Method">public static ItemDTO ConvertToItemDTOWithoutDiscounts(Item item)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ItemRepository</Name>
        <Access>Public</Access>
        <Location left="2883" top="2164" />
        <Size width="463" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private IEnumerable&lt;ItemDTO&gt; GetItems(string Query, List&lt;SqlParameter&gt;? sqlParameters = null)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IEmployeeManager</Name>
        <Access>Public</Access>
        <Location left="30" top="1497" />
        <Size width="315" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Employee ReadEmployeeByEmailPassword(string email, string password)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IItemManager</Name>
        <Access>Public</Access>
        <Location left="2814" top="1465" />
        <Size width="295" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateItem(Item item)</Member>
        <Member type="Method">Item ReadItem(int id, string name, ItemCategory category, ItemCategory subCategory, decimal price, bool available)</Member>
        <Member type="Method">List&lt;Item&gt; ReadItems(string name, ItemCategory category, ItemCategory subCategory, decimal price, bool available)</Member>
        <Member type="Method">List&lt;Item&gt; ReadAvailableItems()</Member>
        <Member type="Method">bool UpdateItem(Item item)</Member>
        <Member type="Method">bool DeleteItem(Item item)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IOrderManager</Name>
        <Access>Public</Access>
        <Location left="1026" top="1475" />
        <Size width="276" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateOrder(Order order)</Member>
        <Member type="Method">Order ReadOrderByClientIdOrderId(int clientId, int orderId)</Member>
        <Member type="Method">List&lt;Order&gt; ReadOrdersByClientId(int clientId)</Member>
        <Member type="Method">bool UpdateOrder(Order order)</Member>
        <Member type="Method">bool DeleteOrder(Order order)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IClientManager</Name>
        <Access>Public</Access>
        <Location left="477" top="1782" />
        <Size width="275" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateClient(Client client)</Member>
        <Member type="Method">bool CreateAddress(Client client)</Member>
        <Member type="Method">Client ReadClientByUsernamePassword(string username, string password)</Member>
        <Member type="Method">Client ReadClientById(int clientId)</Member>
        <Member type="Method">int? ReadClientBonusPointsById(int clientId)</Member>
        <Member type="Method">bool UpdateClient(Client client)</Member>
        <Member type="Method">bool UpdateClientAddBonusCardByClientId(int clientId)</Member>
        <Member type="Method">bool UpdateClientBonusPoints(int clientId, int amountOfPoints)</Member>
        <Member type="Method">bool UpdateClientAddress(Client client)</Member>
        <Member type="Method">bool DeleteClient(Client client)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ItemCategory</Name>
        <Access>Public</Access>
        <Location left="3583" top="739" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string name</Member>
        <Member type="Field">private ItemCategory? parentCategory</Member>
        <Member type="Field">private List&lt;ItemCategory&gt;? subCategories</Member>
        <Member type="Constructor">public ItemCategory(int id, string name, ItemCategory parentCategory)</Member>
        <Member type="Constructor">public ItemCategory(int id, string name)</Member>
        <Member type="Constructor">public ItemCategory(ItemCategoryDTO itemCategoryDTO)</Member>
        <Member type="Constructor">public ItemCategory(ItemCategoryDTO itemCategoryDTO, ItemCategory itemCategory)</Member>
        <Member type="Constructor">public ItemCategory(ItemCategoryDTO itemCategoryDTO, List&lt;ItemCategory&gt; itemSubCategories)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public ItemCategory? ParentCategory { get; set; }</Member>
        <Member type="Property">public List&lt;ItemCategory&gt;? SubCategories { get; set; }</Member>
        <Member type="Method">public override string ToString()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LineItem</Name>
        <Access>Public</Access>
        <Location left="2440" top="710" />
        <Size width="162" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private Item item</Member>
        <Member type="Field">private decimal purchasePrice</Member>
        <Member type="Field">private int amount</Member>
        <Member type="Constructor">public LineItem(Item item)</Member>
        <Member type="Constructor">public LineItem(Item item, int amount)</Member>
        <Member type="Constructor">public LineItem(LineItemDTO lineItemDTO)</Member>
        <Member type="Method">public decimal TotalPrice()</Member>
        <Member type="Method">public decimal DiscountProfit()</Member>
        <Member type="Method">public decimal PriceWithoutDiscount()</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public Item Item { get; set; }</Member>
        <Member type="Property">public decimal PurchasePrice { get; set; }</Member>
        <Member type="Property">public int Amount { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Account</Name>
        <Access>Public</Access>
        <Location left="584" top="274" />
        <Size width="162" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string firstname</Member>
        <Member type="Field">private string lastname</Member>
        <Member type="Field">private string email</Member>
        <Member type="Field">private string password</Member>
        <Member type="Constructor">protected Account(int id, string firstname, string lastname, string email, string password)</Member>
        <Member type="Constructor">protected Account(int id, string firstname, string lastname, string email)</Member>
        <Member type="Constructor">protected Account(int id, string firstname, string lastname, string email, string password)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Firstname { get; private set; }</Member>
        <Member type="Property">public string Lastname { get; private set; }</Member>
        <Member type="Property">public string Email { get; private set; }</Member>
        <Member type="Property">public string Password { get; private set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IEmployeeRepository</Name>
        <Access>Public</Access>
        <Location left="262" top="1937" />
        <Size width="339" height="129" />
        <Collapsed>False</Collapsed>
        <Member type="Method">EmployeeDTO ReadEmployeeByEmailPassword(string email)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IItemRepository</Name>
        <Access>Public</Access>
        <Location left="2973" top="1926" />
        <Size width="288" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateItem(ItemDTO itemDTO)</Member>
        <Member type="Method">ItemDTO ReadItemById(int id)</Member>
        <Member type="Method">List&lt;ItemDTO&gt; ReadItems(string name, int categoryId, int subCategoryId, decimal price, bool available)</Member>
        <Member type="Method">List&lt;ItemDTO&gt; ReadAvailableItems()</Member>
        <Member type="Method">bool UpdateItem(ItemDTO itemDTO)</Member>
        <Member type="Method">bool DeleteItem(ItemDTO itemDTO)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IClientRepository</Name>
        <Access>Public</Access>
        <Location left="738" top="1921" />
        <Size width="297" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateClient(ClientDTO clientDTO)</Member>
        <Member type="Method">bool CreateAddress(ClientDTO clientDTO)</Member>
        <Member type="Method">ClientDTO ReadClientByUsernamePassword(string username)</Member>
        <Member type="Method">ClientDTO ReadClientById(int clientId)</Member>
        <Member type="Method">int? ReadClientBonusPointsById(int clientId)</Member>
        <Member type="Method">bool UpdateClient(ClientDTO clientDTO)</Member>
        <Member type="Method">bool UpdateClientAddBonusCardByClientId(int clientId)</Member>
        <Member type="Method">bool UpdateClientBonusPoints(int clientId, int amountOfPoints)</Member>
        <Member type="Method">bool UpdateClientAddress(ClientDTO clientDTO)</Member>
        <Member type="Method">bool DeleteClient(ClientDTO clientDTO)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IOrderRepository</Name>
        <Access>Public</Access>
        <Location left="1231" top="1956" />
        <Size width="298" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateOrder(OrderDTO orderDTO)</Member>
        <Member type="Method">OrderDTO ReadOrderByClientIdOrderId(int clientId, int orderId)</Member>
        <Member type="Method">List&lt;OrderDTO&gt; ReadOrdersByClientId(int clientId)</Member>
        <Member type="Method">bool UpdateOrder(OrderDTO orderDTO)</Member>
        <Member type="Method">bool DeleteOrder(OrderDTO orderDTO)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ItemDTO</Name>
        <Access>Public</Access>
        <Location left="3272" top="1860" />
        <Size width="219" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public ItemCategoryDTO Category { get; set; }</Member>
        <Member type="Property">public ItemCategoryDTO SubCategory { get; set; }</Member>
        <Member type="Property">public decimal Price { get; set; }</Member>
        <Member type="Property">public bool Available { get; set; }</Member>
        <Member type="Property">public string UnitType { get; set; }</Member>
        <Member type="Property">public int StockAmount { get; set; }</Member>
        <Member type="Property">public List&lt;DiscountDTO&gt; Discounts { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ItemCategoryDTO</Name>
        <Access>Public</Access>
        <Location left="3852" top="1926" />
        <Size width="302" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public int? ParentId { get; set; }</Member>
        <Member type="Property">public List&lt;ItemCategoryDTO&gt;? SubCategories { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IItemCategoryRepository</Name>
        <Access>Public</Access>
        <Location left="3523" top="1926" />
        <Size width="297" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateItemCategory(ItemCategoryDTO itemCategoryDTO)</Member>
        <Member type="Method">List&lt;ItemCategoryDTO&gt; ReadAllItemCategories()</Member>
        <Member type="Method">bool UpdateItemCategory(ItemCategoryDTO itemCategoryDTO)</Member>
        <Member type="Method">bool DeleteItemCategory(int Id)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IItemCategoryManager</Name>
        <Access>Public</Access>
        <Location left="3298" top="1465" />
        <Size width="275" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateItemCategory(ItemCategory itemCategory)</Member>
        <Member type="Method">List&lt;ItemCategory&gt; ReadAllItemCategories()</Member>
        <Member type="Method">bool UpdateItemCategory(ItemCategory itemCategory)</Member>
        <Member type="Method">bool DeleteItemCategory(int Id)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ItemCategoryManager</Name>
        <Access>Public</Access>
        <Location left="3535" top="1641" />
        <Size width="273" height="145" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IItemCategoryRepository itemCategoryRepository</Member>
        <Member type="Constructor">public ItemCategoryManager(IItemCategoryRepository itemCategoryRepository)</Member>
        <Member type="Method">public static List&lt;ItemCategory&gt; ConvertToModel(List&lt;ItemCategoryDTO&gt; itemCategoriesDTO)</Member>
        <Member type="Method">public static List&lt;ItemCategory&gt; ConvertToModelChildren(List&lt;ItemCategoryDTO&gt; itemCategoriesDTO)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ItemCategoryRepository</Name>
        <Access>Public</Access>
        <Location left="3589" top="2164" />
        <Size width="163" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private IEnumerable&lt;ItemCategoryDTO&gt; GetItemCategories(string Query, List&lt;SqlParameter&gt;? sqlParameters)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Address</Name>
        <Access>Public</Access>
        <Location left="1591" top="966" />
        <Size width="209" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string country</Member>
        <Member type="Field">private string city</Member>
        <Member type="Field">private string street</Member>
        <Member type="Field">private string postalCode</Member>
        <Member type="Constructor">public Address()</Member>
        <Member type="Constructor">public Address(AddressDTO addressDTO)</Member>
        <Member type="Constructor">public Address(string country, string city, string street, string postalCode, Client client)</Member>
        <Member type="Property">public string Country { get; set; }</Member>
        <Member type="Property">public string City { get; set; }</Member>
        <Member type="Property">public string Street { get; set; }</Member>
        <Member type="Property">public string PostalCode { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LineItemManager</Name>
        <Access>Public</Access>
        <Location left="2361" top="1791" />
        <Size width="260" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static LineItemDTO ConvertToLineItemDTO(LineItem lineItem)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LineItemDTO</Name>
        <Access>Public</Access>
        <Location left="2675" top="1860" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public ItemDTO ItemDTO { get; set; }</Member>
        <Member type="Property">public decimal PurchasePrice { get; set; }</Member>
        <Member type="Property">public int Amount { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ClientDTO</Name>
        <Access>Public</Access>
        <Location left="1046" top="1902" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Firstname { get; set; }</Member>
        <Member type="Property">public string Lastname { get; set; }</Member>
        <Member type="Property">public string Email { get; set; }</Member>
        <Member type="Property">public int Password { get; set; }</Member>
        <Member type="Property">public string Salt { get; set; }</Member>
        <Member type="Property">public int Username { get; set; }</Member>
        <Member type="Property">public int? AmountOfPoints { get; set; }</Member>
        <Member type="Property">public AddressDTO? AddressDTO { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShoppingCartRepository</Name>
        <Access>Public</Access>
        <Location left="1634" top="2164" />
        <Size width="463" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">private IEnumerable&lt;LineItemDTO&gt; GetShoppingCart(string Query, List&lt;SqlParameter&gt;? sqlParameters)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ShoppingCartDTO</Name>
        <Access>Public</Access>
        <Location left="2049" top="1860" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public List&lt;LineItemDTO&gt; addedItems { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IShoppingCartRepository</Name>
        <Access>Public</Access>
        <Location left="1724" top="1936" />
        <Size width="288" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateShoppingCartItem(int clientId, LineItemDTO lineItemDTO)</Member>
        <Member type="Method">ShoppingCartDTO ReadShoppingCart(int clientId)</Member>
        <Member type="Method">bool UpdateShoppingCartItem(LineItemDTO lineItemDTO)</Member>
        <Member type="Method">bool UpdateShoppingCartItems(int clientId, ShoppingCartDTO shoppingCartDTO)</Member>
        <Member type="Method">bool DeleteShoppingCart(LineItemDTO lineItemDTO)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ShoppingCartManager</Name>
        <Access>Public</Access>
        <Location left="1735" top="1657" />
        <Size width="260" height="128" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private readonly IShoppingCartRepository shoppingCartRepository</Member>
        <Member type="Constructor">public ShoppingCartManager(IShoppingCartRepository shoppingCartRepository)</Member>
        <Member type="Method">public static ShoppingCartDTO ConvertToShoppingCartDTO(ShoppingCart shoppingCart)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IShoppingCartManager</Name>
        <Access>Public</Access>
        <Location left="1565" top="1475" />
        <Size width="295" height="146" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool CreateShoppingCartItem(int clientId, LineItem lineItem)</Member>
        <Member type="Method">ShoppingCart ReadShoppingCart(int clientId)</Member>
        <Member type="Method">bool UpdateShoppingCartItem(LineItem lineItem)</Member>
        <Member type="Method">bool UpdateShoppingCartItems(int clientId, ShoppingCart shoppingCart)</Member>
        <Member type="Method">bool DeleteShoppingCart(LineItem lineItem)</Member>
      </Entity>
      <Entity type="Class">
        <Name>OrderDTO</Name>
        <Access>Public</Access>
        <Location left="1528" top="1891" />
        <Size width="202" height="253" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public ClientDTO clientDTO { get; set; }</Member>
        <Member type="Property">public int? OrderBonusPoints { get; set; }</Member>
        <Member type="Property">public int? OrderSpentBonusPoints { get; set; }</Member>
        <Member type="Property">public DateOnly OrderDate { get; set; }</Member>
        <Member type="Property">public DateOnly? DeliveryDate { get; set; }</Member>
        <Member type="Property">public int OrderStatus { get; set; }</Member>
        <Member type="Property">public int PaymentMethod { get; set; }</Member>
        <Member type="Property">public AddressDTO AddressDTO { get; set; }</Member>
        <Member type="Property">public List&lt;LineItemDTO&gt; PurchasedItems { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DiscountPercentage</Name>
        <Access>Public</Access>
        <Location left="2440" top="1140" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public DiscountPercentage(int discountValue, int amountForDiscount, DateTime endOfDiscount, DateTime startOfDiscount, string discountMessage)</Member>
        <Member type="Constructor">public DiscountPercentage(DiscountDTO discountDTO)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DiscountFixed</Name>
        <Access>Public</Access>
        <Location left="2801" top="1140" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public DiscountFixed(int discountValue, int amountForDiscount, DateTime endOfDiscount, DateTime startOfDiscount, string discountMessage)</Member>
        <Member type="Constructor">public DiscountFixed(DiscountDTO discountDTO)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IDiscount</Name>
        <Access>Public</Access>
        <Location left="2617" top="977" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">decimal CalculateDiscount(int amount, decimal price)</Member>
        <Member type="Method">string ToString()</Member>
      </Entity>
      <Entity type="Class">
        <Name>Discount</Name>
        <Access>Public</Access>
        <Location left="2617" top="1298" />
        <Size width="162" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected DateTime startOfDiscount</Member>
        <Member type="Field">protected DateTime endOfDiscount</Member>
        <Member type="Field">protected int amountForDiscount</Member>
        <Member type="Field">protected decimal discountValue</Member>
        <Member type="Field">protected string discountMessage</Member>
        <Member type="Constructor">protected Discount(int amountForDiscount, DateTime startOfDiscount, DateTime endOfDiscount, decimal discountValue, string discountMessage)</Member>
        <Member type="Method">public override string ToString()</Member>
        <Member type="Property">public DateTime StartOfDiscount { get; set; }</Member>
        <Member type="Property">public DateTime EndOfDiscount { get; set; }</Member>
        <Member type="Property">public int AmountForDiscount { get; set; }</Member>
        <Member type="Property">public decimal DiscountValue { get; set; }</Member>
        <Member type="Property">public string DiscountMessage { get; set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AddressDTO</Name>
        <Access>Public</Access>
        <Location left="1887" top="906" />
        <Size width="209" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string Country { get; set; }</Member>
        <Member type="Property">public string City { get; set; }</Member>
        <Member type="Property">public string Street { get; set; }</Member>
        <Member type="Property">public string PostalCode { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DiscountDTO</Name>
        <Access>Public</Access>
        <Location left="2191" top="1180" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int DiscountTypeId { get; set; }</Member>
        <Member type="Property">public DateTime StartOfDiscount { get; set; }</Member>
        <Member type="Property">public DateTime EndOfDiscount { get; set; }</Member>
        <Member type="Property">public int AmountForDiscount { get; set; }</Member>
        <Member type="Property">public decimal DiscountValue { get; set; }</Member>
        <Member type="Property">public string DiscountMessage { get; set; }</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EmployeeDTO</Name>
        <Access>Public</Access>
        <Location left="554" top="2082" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Firstname { get; set; }</Member>
        <Member type="Property">public string Lastname { get; set; }</Member>
        <Member type="Property">public string Email { get; set; }</Member>
        <Member type="Property">public int Password { get; set; }</Member>
        <Member type="Property">public string Salt { get; set; }</Member>
        <Member type="Property">public string EmployeeRole { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>AccountManager</Name>
        <Access>Public</Access>
        <Location left="599" top="1260" />
        <Size width="218" height="226" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public string GenerateSalt(int length = 10)</Member>
        <Member type="Method">public string HashPassword(string password, string salt)</Member>
        <Member type="Method">public bool ValidatePassword(string password, string hashedPassword)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>PaymentMethod</Name>
        <Access>Public</Access>
        <Location left="3034" top="355" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>PayPal</Value>
        <Value>iDeal</Value>
        <Value>Bank_Transfer</Value>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>0..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="6">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="9" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="7" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="8" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="15" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>193</X>
          <Y>1700</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="14" second="17">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="13" second="18">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1179</X>
          <Y>1742</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="11" second="19">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>716</X>
          <Y>1697</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="20" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="6" second="21">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1..*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="21" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Generalization" first="5" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="0" second="22">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="23">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="24">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="13" second="26">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="25">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="9" second="23">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="15" second="24">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="7" second="26">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="8" second="25">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="20">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="31" second="30">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="31" second="29">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="32" second="29">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="32" second="10">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="15" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="27">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="14" second="2">
        <Label>Retrieves information about Item</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="31" second="20">
        <Label>Retrieves information about ItemCategory</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="13" second="1">
        <Label>Retrieves information about Order</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="0">
        <Label>Retrieves information about Client</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="12" second="5">
        <Label>Retrieves information about Employee</Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="33">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="43" second="45">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="44" second="45">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="43" second="46">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="44" second="46">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="45">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3024</X>
          <Y>952</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="28" second="28">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="12" second="50">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Generalization" first="11" second="50">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>